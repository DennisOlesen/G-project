%{
(* HEADER *)
%}

%%

/* DECLARATIONS */

%start TProg

%token <int> Prog
%token <int> Program Function Procedure  /* structure */

%token <int> FunDecs
%token <int> FunDec

%token <int> Var Begin End                 /* blocks */
%token <int> If Then Else                  /* conditional */
%token <int> While Do Return               /* loop */
%token <int> Array Of                      /* array */
%token <int> Int Char Bool                 /* primitive types */
%token <int> Semi Colon Comma Assign       /* symbols */
%token <int> Plus Minus Times Slash        /* arithmetic operators */
%token <int> Eq Less And                   /* boolean operators */
%token <int> LParen LCurly LBracket        /* parentheses */
%token <int> Id                            /* identifiers */
%token <int*int> NLit                      /* number literal */
%token <bool*int> BLit                     /* boolean literal */
%token <char*int> CLit                     /* char literal */
%token <string*int> Slit                   /* string literal */
%token <int> EOF                           /* EOF */

/* add type declarations after rules */

/* associativty and precedende */

%left TPlus TMinus
%left TTimes TSlash

%%

/* RULES */

TProg   : TProgram TId ; FunDecs            {}

FunDecs : FunDecs FunDec                    {}
        | FunDec                            {}

FunDec  : function TId : 

%%
(* TRAILER (sml code) *)
